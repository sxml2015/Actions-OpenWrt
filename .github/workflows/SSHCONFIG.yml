name: 提取config
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'


env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: aarch64/SSHCONFIG.config
  #CONFIG_FILE: aarch64/ARMv8_SF.config   
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: true
  UPLOAD_CONFIG: true
  DELETE_ARTIFACTS: true   # 删除旧的工作流程运行和工件
  TZ: Asia/Shanghai
  FILE_NAME: config
  PRODUCT_NAME: Build_config

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: 提取config
    strategy:
      fail-fast: false
      
    steps:
    - name: 准备
      uses: actions/checkout@master

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq install rename
        sudo -E apt-get -qq install time
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y.%m.%d.%H%M")" >> $GITHUB_ENV

    - name: 更新软件包
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装软件包
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
        sed -i 's/OpenWrt/MRG AutoBuild ${{ env.DATE1 }} @ OpenWrt/g' package/lean/default-settings/files/zzz-default-settings
        
    - name: SSH远程连接（配置固件）
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 生成.config配置文件
      run: |
        cd openwrt
        make defconfig
        ./scripts/diffconfig.sh > ${GITHUB_WORKSPACE}/config.txt
    
    - name: 上传.config配置文件
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.FILE_NAME }}-${{ env.DATE1 }}-
        path: config.txt
        
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 删除旧的工作流程运行和工件
      uses: Mattraks/delete-workflow-runs@main
      if: env.DELETE_ARTIFACTS == 'true'
      with:
        token: ${{ secrets.RELEASES_TOKEN }}    # 令牌
        repository: ${{ github.repository }}    # 运行工作流的存储库的名称。
        retain_days: 1                          # 工作流的保留天数进行比较的天数       
        keep_minimum_runs: 0                    # 工作流程保留的最少运行次数
        
#    - name: 取消编译
#      uses: potiuk/cancel-workflow-runs@master
#      with:
#        cancelMode: self
#        notifyPRCancel: true
#        token: ${{ secrets.RELEASES_TOKEN }}
